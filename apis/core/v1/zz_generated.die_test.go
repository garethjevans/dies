//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 the original author or authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by diegen. DO NOT EDIT.

package v1

import (
	testing "github.com/scothis/dies/testing"
	testingx "testing"
)

func TestConfigMapDie_MissingMethods(t *testingx.T) {
	die := ConfigMapBlank
	ignore := []string{"BinaryData", "Data", "TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ConfigMapDie: %s", diff.List())
	}
}

func TestContainerDie_MissingMethods(t *testingx.T) {
	die := ContainerBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ContainerDie: %s", diff.List())
	}
}

func TestEndpointsDie_MissingMethods(t *testingx.T) {
	die := EndpointsBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for EndpointsDie: %s", diff.List())
	}
}

func TestEventDie_MissingMethods(t *testingx.T) {
	die := EventBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for EventDie: %s", diff.List())
	}
}

func TestLimitRangeDie_MissingMethods(t *testingx.T) {
	die := LimitRangeBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for LimitRangeDie: %s", diff.List())
	}
}

func TestLimitRangeSpecDie_MissingMethods(t *testingx.T) {
	die := LimitRangeSpecBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for LimitRangeSpecDie: %s", diff.List())
	}
}

func TestNamespaceDie_MissingMethods(t *testingx.T) {
	die := NamespaceBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for NamespaceDie: %s", diff.List())
	}
}

func TestNamespaceSpecDie_MissingMethods(t *testingx.T) {
	die := NamespaceSpecBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for NamespaceSpecDie: %s", diff.List())
	}
}

func TestNamespaceStatusDie_MissingMethods(t *testingx.T) {
	die := NamespaceStatusBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for NamespaceStatusDie: %s", diff.List())
	}
}

func TestNodeDie_MissingMethods(t *testingx.T) {
	die := NodeBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for NodeDie: %s", diff.List())
	}
}

func TestNodeSpecDie_MissingMethods(t *testingx.T) {
	die := NodeSpecBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for NodeSpecDie: %s", diff.List())
	}
}

func TestNodeStatusDie_MissingMethods(t *testingx.T) {
	die := NodeStatusBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for NodeStatusDie: %s", diff.List())
	}
}

func TestPersistentVolumeDie_MissingMethods(t *testingx.T) {
	die := PersistentVolumeBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for PersistentVolumeDie: %s", diff.List())
	}
}

func TestPersistentVolumeSpecDie_MissingMethods(t *testingx.T) {
	die := PersistentVolumeSpecBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for PersistentVolumeSpecDie: %s", diff.List())
	}
}

func TestPersistentVolumeStatusDie_MissingMethods(t *testingx.T) {
	die := PersistentVolumeStatusBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for PersistentVolumeStatusDie: %s", diff.List())
	}
}

func TestGlusterfsPersistentVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := GlusterfsPersistentVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for GlusterfsPersistentVolumeSourceDie: %s", diff.List())
	}
}

func TestRBDPersistentVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := RBDPersistentVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for RBDPersistentVolumeSourceDie: %s", diff.List())
	}
}

func TestISCSIPersistentVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := ISCSIPersistentVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ISCSIPersistentVolumeSourceDie: %s", diff.List())
	}
}

func TestCinderPersistentVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := CinderPersistentVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for CinderPersistentVolumeSourceDie: %s", diff.List())
	}
}

func TestCephFSPersistentVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := CephFSPersistentVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for CephFSPersistentVolumeSourceDie: %s", diff.List())
	}
}

func TestFlexPersistentVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := FlexPersistentVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for FlexPersistentVolumeSourceDie: %s", diff.List())
	}
}

func TestAzureFilePersistentVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := AzureFilePersistentVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for AzureFilePersistentVolumeSourceDie: %s", diff.List())
	}
}

func TestScaleIOPersistentVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := ScaleIOPersistentVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ScaleIOPersistentVolumeSourceDie: %s", diff.List())
	}
}

func TestLocalVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := LocalVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for LocalVolumeSourceDie: %s", diff.List())
	}
}

func TestStorageOSPersistentVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := StorageOSPersistentVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for StorageOSPersistentVolumeSourceDie: %s", diff.List())
	}
}

func TestCSIPersistentVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := CSIPersistentVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for CSIPersistentVolumeSourceDie: %s", diff.List())
	}
}

func TestPersistentVolumeClaimDie_MissingMethods(t *testingx.T) {
	die := PersistentVolumeClaimBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for PersistentVolumeClaimDie: %s", diff.List())
	}
}

func TestPersistentVolumeClaimSpecDie_MissingMethods(t *testingx.T) {
	die := PersistentVolumeClaimSpecBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for PersistentVolumeClaimSpecDie: %s", diff.List())
	}
}

func TestPersistentVolumeClaimStatusDie_MissingMethods(t *testingx.T) {
	die := PersistentVolumeClaimStatusBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for PersistentVolumeClaimStatusDie: %s", diff.List())
	}
}

func TestPodDie_MissingMethods(t *testingx.T) {
	die := PodBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for PodDie: %s", diff.List())
	}
}

func TestPodSpecDie_MissingMethods(t *testingx.T) {
	die := PodSpecBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for PodSpecDie: %s", diff.List())
	}
}

func TestPodStatusDie_MissingMethods(t *testingx.T) {
	die := PodStatusBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for PodStatusDie: %s", diff.List())
	}
}

func TestPodTemplateSpecDie_MissingMethods(t *testingx.T) {
	die := PodTemplateSpecBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for PodTemplateSpecDie: %s", diff.List())
	}
}

func TestResourceQuotaDie_MissingMethods(t *testingx.T) {
	die := ResourceQuotaBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ResourceQuotaDie: %s", diff.List())
	}
}

func TestResourceQuotaSpecDie_MissingMethods(t *testingx.T) {
	die := ResourceQuotaSpecBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ResourceQuotaSpecDie: %s", diff.List())
	}
}

func TestResourceQuotaStatusDie_MissingMethods(t *testingx.T) {
	die := ResourceQuotaStatusBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ResourceQuotaStatusDie: %s", diff.List())
	}
}

func TestSecretDie_MissingMethods(t *testingx.T) {
	die := SecretBlank
	ignore := []string{"Data", "StringData", "TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for SecretDie: %s", diff.List())
	}
}

func TestServiceDie_MissingMethods(t *testingx.T) {
	die := ServiceBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ServiceDie: %s", diff.List())
	}
}

func TestServiceSpecDie_MissingMethods(t *testingx.T) {
	die := ServiceSpecBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ServiceSpecDie: %s", diff.List())
	}
}

func TestServiceStatusDie_MissingMethods(t *testingx.T) {
	die := ServiceStatusBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ServiceStatusDie: %s", diff.List())
	}
}

func TestServiceAccountDie_MissingMethods(t *testingx.T) {
	die := ServiceAccountBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ServiceAccountDie: %s", diff.List())
	}
}

func TestVolumeDie_MissingMethods(t *testingx.T) {
	die := VolumeBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for VolumeDie: %s", diff.List())
	}
}

func TestHostPathVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := HostPathVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for HostPathVolumeSourceDie: %s", diff.List())
	}
}

func TestEmptyDirVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := EmptyDirVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for EmptyDirVolumeSourceDie: %s", diff.List())
	}
}

func TestGCEPersistentDiskVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := GCEPersistentDiskVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for GCEPersistentDiskVolumeSourceDie: %s", diff.List())
	}
}

func TestAWSElasticBlockStoreVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := AWSElasticBlockStoreVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for AWSElasticBlockStoreVolumeSourceDie: %s", diff.List())
	}
}

func TestGitRepoVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := GitRepoVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for GitRepoVolumeSourceDie: %s", diff.List())
	}
}

func TestSecretVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := SecretVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for SecretVolumeSourceDie: %s", diff.List())
	}
}

func TestNFSVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := NFSVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for NFSVolumeSourceDie: %s", diff.List())
	}
}

func TestISCSIVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := ISCSIVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ISCSIVolumeSourceDie: %s", diff.List())
	}
}

func TestGlusterfsVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := GlusterfsVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for GlusterfsVolumeSourceDie: %s", diff.List())
	}
}

func TestPersistentVolumeClaimVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := PersistentVolumeClaimVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for PersistentVolumeClaimVolumeSourceDie: %s", diff.List())
	}
}

func TestRBDVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := RBDVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for RBDVolumeSourceDie: %s", diff.List())
	}
}

func TestFlexVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := FlexVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for FlexVolumeSourceDie: %s", diff.List())
	}
}

func TestCinderVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := CinderVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for CinderVolumeSourceDie: %s", diff.List())
	}
}

func TestCephFSVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := CephFSVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for CephFSVolumeSourceDie: %s", diff.List())
	}
}

func TestFlockerVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := FlockerVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for FlockerVolumeSourceDie: %s", diff.List())
	}
}

func TestDownwardAPIVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := DownwardAPIVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for DownwardAPIVolumeSourceDie: %s", diff.List())
	}
}

func TestFCVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := FCVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for FCVolumeSourceDie: %s", diff.List())
	}
}

func TestAzureFileVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := AzureFileVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for AzureFileVolumeSourceDie: %s", diff.List())
	}
}

func TestConfigMapVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := ConfigMapVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ConfigMapVolumeSourceDie: %s", diff.List())
	}
}

func TestVsphereVirtualDiskVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := VsphereVirtualDiskVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for VsphereVirtualDiskVolumeSourceDie: %s", diff.List())
	}
}

func TestQuobyteVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := QuobyteVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for QuobyteVolumeSourceDie: %s", diff.List())
	}
}

func TestAzureDiskVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := AzureDiskVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for AzureDiskVolumeSourceDie: %s", diff.List())
	}
}

func TestPhotonPersistentDiskVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := PhotonPersistentDiskVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for PhotonPersistentDiskVolumeSourceDie: %s", diff.List())
	}
}

func TestProjectedVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := ProjectedVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ProjectedVolumeSourceDie: %s", diff.List())
	}
}

func TestPortworxVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := PortworxVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for PortworxVolumeSourceDie: %s", diff.List())
	}
}

func TestScaleIOVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := ScaleIOVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ScaleIOVolumeSourceDie: %s", diff.List())
	}
}

func TestStorageOSVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := StorageOSVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for StorageOSVolumeSourceDie: %s", diff.List())
	}
}

func TestCSIVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := CSIVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for CSIVolumeSourceDie: %s", diff.List())
	}
}

func TestEphemeralVolumeSourceDie_MissingMethods(t *testingx.T) {
	die := EphemeralVolumeSourceBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for EphemeralVolumeSourceDie: %s", diff.List())
	}
}
